---
import Badge from "../components/Badge.astro";
import Experience from "../components/Experience.astro";
import SectionContainer from "../components/SectionContainer.astro";
import SocialPill from "../components/SocialPill.astro";
import Code from "../icons/Code.astro";
import Github from "../icons/Github.astro";
import Gmail from "../icons/Gmail.astro";
import Linkedin from "../icons/Linkedin.astro";
import Layout from "../layouts/Layout.astro";
import Projects from "../components/Projects.astro";

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
  <main class="px-4">
    <SectionContainer id="sobre-mi" class="py-44 pb-24">
      <img
        class="rounded-full size-20 object-cover object-bottom mb-6"
        src="/used/photo.jpeg"
        alt="Alejandro photo"
      />
      <h1
        class="text-white text-3xl md:text-4xl lg:text-5xl font-bold flex flex-wrap flex-row gap-x-4 pb-10 hero-title"
      >
        Hey, soy Alejandro <a
          href="/linkedin"
          target="_blank"
          rel="noopener"
          class="flex justify-center items-center"
        >
          <Badge>Disponible para trabajar</Badge>
        </a>
      </h1>
      <h2 class="hero-title text-2xl opacity-80 text-wrap">
        <span class="text-green-300/90"> Desarrollador web Frontend. </span>
        <span class="text-red-300/90"> De Bogota, Colombia.</span>
        <span class="opacity-75"> Especializado en crear Web's unicas. </span>
      </h2>
      <ul>
        <li>
          <nav class="flex flex-wrap gap-3 mt-8">
            <SocialPill
              href="https://www.linkedin.com/in/alejandro-pe%C3%B1aloza-hernandez-833566267/"
            >
              <Linkedin class="size-6" />
              LinkedIn
            </SocialPill>
            <SocialPill href="https://github.com/Alejandro-terminus777/">
              <Github class="size-6" />
              Github
            </SocialPill>
            <SocialPill href="mailto:ichoat2017@gmail.com">
              <Gmail class="size-6" />
              ichoat2017@gmail.com
            </SocialPill>
          </nav>
        </li>
      </ul>
    </SectionContainer>
    <SectionContainer id="experiencia" class="pt-0">
      <h2 class="hero-title text-2xl font-semibold mb-6">Experiencia Laboral</h2>
      <Experience />
    </SectionContainer>
    <SectionContainer id="proyectos" class="pt-0">
      <h2 class="hero-title text-2xl font-semibold mb-6 flex gap-2">
        <Code class="size-7" /> Proyectos
      </h2>
      <Projects />
    </SectionContainer>
  </main>
</Layout>

<script>
  import { gsap } from "gsap";
  import SplitType from "split-type";

  window.addEventListener("DOMContentLoaded", () => {
    const text = new SplitType(".hero-title", { types: ["words", "chars"] });

    if (text.chars) {
      text.chars.forEach((char, index) => {
        let charsTl = gsap.timeline();

        charsTl.from(char, {
          y: gsap.utils.random(-150, 150),
          x: gsap.utils.random(-300, 300),
          rotate: gsap.utils.random(-360, 360),
          scale: gsap.utils.random(0, 2),
          opacity: 0,
          duration: 0.75,
          ease: "back.out",
          delay: index * 0.01,
        });
        charsTl.from(
          char,
          {
            color: `rgb(${gsap.utils.random(0, 255)}, ${gsap.utils.random(0, 255)}, ${gsap.utils.random(0, 255)})`,
            duration: 1,
          },
          "-=.25"
        );

        char.addEventListener("mouseenter", charsHover);

        let charOriginalColor = window.getComputedStyle(char).color;

        function charsHover() {
          gsap
            .timeline()
            .to(char, {
              y: gsap.utils.random(-50, 50),
              x: gsap.utils.random(-50, 50),
              rotate: gsap.utils.random(-90, 90),
              scale: gsap.utils.random(0.5, 1.5),
              duration: 0.5,
              ease: "back.out",
              color: `rgb(${gsap.utils.random(0, 255)}, ${gsap.utils.random(0, 255)}, ${gsap.utils.random(0, 255)})`,
              onStart: () => {
                char.removeEventListener("mouseenter", charsHover);
              },
            })
            .to(char, {
              y: 0,
              x: 0,
              rotate: 0,
              scale: 1,
              color: charOriginalColor,
              delay: 1,
              duration: 0.5,
              ease: "back.out",
              onComplete: () => {
                setTimeout(() => {
                  char.addEventListener("mouseenter", charsHover);
                }, 100);
              },
            });
        }
      });
    }
  });
</script>
